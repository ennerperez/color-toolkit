<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAEAAAABYAAAAWAAAAFgAA
        ABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAA
        ABYAAAAQAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAxAAAAQgAA
        AEMAAABDAAAAQwAAAEMAAABDAAAAQwAAAEMAAABDAAAAQwAAAEMAAABDAAAAQwAAAEMAAABDAAAAQwAA
        AEMAAABDAAAAQgAAADEAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFri4
        uPO4uLj/t7e4/7a3uf+2t7n/tre6/7a3uv+2t7n/tre5/7a3uP+2t7f/t7i4/7e4uf+3ubn/t7m5/7e5
        uf+3ubn/t7i5/7e4uP+4uLj/uLi48wAAABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAWuLi5////////////////////////////////////////////////////////////////////
        //////////////////////////////////+4uLn/AAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABa3t7j////////Fb///nhL//58W//+gF///oBf//58W//+eEv//xnD//////96B
        ev/HLyL/xzMm/8czJ//HMyf/xzMm/8cvIv/fgXn//////7e4uP8AAAAWAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAFra3uf///////54S///VZf//02D//9Ng///TYP//02D//9Vl//+g
        FP/+////xjAk//+CX///fVv//31c//99XP//fVv//4Jf/8cvIv//////t7i5/wAAABYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWtre6////////oBb//9Bn///KVf//ylX//8pV///K
        Vf//0Gf//6IY//v////HNCj/94Fl//NxVf/zclX/83JV//NxVf/2gWX/xzIl//////+3ubn/AAAAFgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABa2t7r///////+gFv//zWn//8JL///C
        Tf//wk3//8JL///Naf//oxn/9////8g0Kf/wgWv/6mdO/+poUP/qaFD/6mdO//CBa//IMyX//////7e5
        uf8AAAAWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFre4uv///////6IX///M
        bP//u0H//7tD//+7Q///u0H//81s//+lGv/3////yjUq/+qCcP/iXEf/4l5I/+JeSP/iXEf/6YFw/8kz
        Jf//////t7m5/wAAABYAAAAFAAAAEAAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAnvL2/////
        ////pxj//89v//+3Nf//uDf//7g3//+3Nf//z2///6oa//v////ROSz/64d4/9tRP//ZUUD/2VFA/9hQ
        Pv/lhHb/yTMl//////+3ubn/AAAAFgAAABALCwszAAAAQgAAAEMAAABDAAAAQwAAAEMAAABDAAAAQwAA
        AEhhYWL/io6U/4daGP+HbEX/h21G/4dtRv+HbUb/h21G/4dtRf+IXBr/fouS/3EcFP9+SkX/5omA/+KI
        f//hh37/4YZ9/+GFe//JMCH//////7e4uf8AAAAWAAAAFri4uPK4uLj/uLi3/7m5t/+6ubf/urm3/7q5
        t/+6ubf/u7q4/7u7uv+7u73/u73A/7u9wv+8vcL/vL3C/7y9wv+8vcL/u73C/7u9wv+9wsT/xrCv/3UV
        Df/VOSv/0DYo/881KP/PNCf/zTEk/9h5cP//////t7i4/wAAABYAAAAWubm4////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ///BwcP/ko+V/////////f////v////7////+f//9vL3//////+3t7f/AAAAFgAAABa4uLf//////2l7
        5v8HJdX/CynV/wwq1f8MKtX/CynV/wcl1f9qe+b//////2rE//8Gm///C53//wud//8Lnf//C53//wab
        //9pw////////8a8v/8AZzD/AMFq/wC7Zv8AumX/ALpl/wC5Yv9DyZX//////7i3uP8AAAAWAAAAFrm5
        t///////BiXV/1lm//9QXv//UV/+/1Ff/v9QXv//WWb//wkl1f////z/CJ3//2PN/f9Yyv3/Wcr9/1nK
        /f9Yyv3/Y839/wab////////yru//xCBWP8x6qf/M+Sk/zLio/8y4qL/N+Wm/wC2X///////ure4/wAA
        ABYAAAAWurm3//////8KKNX/Z3P6/0dX9v9IWPb/SFj2/0dX9v9ndPr/DSnV////+v8Nn///a8z+/0zB
        /v9Nwf7/TcH+/0zB/v9rzP7/Cp3////////Ku7//E31W/yXinP8o3Jn/KNuY/yfbl/884KT/ALZh////
        //+6t7j/AAAAFgAAABa6ubf//////woo1v9ygPX/PVDv/z9T7/8/U+//PVDv/3KA9v8NKdb////2/w2g
        //93zv7/Qbr+/0O7/v9Du/7/Qbr+/3bO/v8Jnf///////8q8v/8We1X/G9qS/x7UkP8e04//HNOO/0Hb
        ov8At2H//////7q3uP8AAAAWAAAAFrq5t///////CSfW/4CM8v8yR+j/NUvp/zVL6f8yR+j/gIzy/w0o
        1v////P/DKD//4LR//81sv7/OLT+/zi0/v81sv7/gtH//wmd////////yry//xl6U/8Q1Ij/E8+G/xPO
        hf8QzYT/R9mg/wC3Yv//////ure4/wAAABYAAAAWurm3//////8IJdb/jJrw/yM94f8mP+H/Jj/h/yM9
        4f+NmvD/CyfX////7/8LoP//j9T//yWr//8orP//KKz//yWr//+P1P//B5z////////JvL//HnhU/wLM
        ff8Fxnv/BcV6/wPFef9N1qD/ALdh//////+6t7j/AAAAFgAAABa5ubf//////wQi1v+cqPD/nqnw/5+q
        8P+fqvD/nqnw/5yo8P8IJNf////s/wif//+c2P//ntj//5/Z//+f2f//ntj//5zY//8Em////////8m8
        v/8gd1T/VNym/1XWo/9V1aL/VNWi/1HVoP8At1///////7q3uP8AAAAWAAAAFri4t///////YHHg/wYj
        2/8KJtz/Cibc/wom3P8KJtz/ByTb/2Nz4P//+en/Yr/5/wWg//8Hof//CKH//wih//8Hof//BJ///1+8
        +P//////xru+/wBlLf8Av2b/ALli/wC3Yv8At2H/ALdf/zm+iP//////ube4/wAAABUAAAAWuLe3////
        ///78fT///j8///6/v//+v////r////6/v//+Pz//fT1//Py7f/z+ur/9//p//j/6v/4/+r/+P/q//j/
        6v/2/+n/8fjn//////+/u7z/pZuf//////////////////////////////////////+5uLj/AAAADQAA
        ABa4t7j//////4LZQv9B0QD/RNIA/0TSAP9E0gD/RNIA/0LSAP+D3UT/7vT0//tDwP//AKT//wCk//8A
        pP//AKT//wCk//8ApP/4Qbz//////7u9vP9lY2T/wL6//7u4uv+6t7j/ure4/7q3uP+5t7j/ubi4/7e3
        t7QAAAAEAAAAFri3uv//////Pc4A/6PzdP+b8Wj/nPFo/5zxaP+b8Wj/pPR0/z/TAP/s9/n//wCo//+Z
        5f/+juD//o7g//6O4P/+juD//pnk//8Ao///////ur67/wAAABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAWube6//////8/zgD/oO5x/4rpTv+L6VD/i+lQ/4rpTv+h73L/QdQA/+r2
        9///AKn//ovf//5r1P/+a9T//mvU//5r1P/+i97//wCj//////+4vLn/AAAAFgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABa5t7r//////z/OAP+i7XP/feQ6/3/kPP9/5Dz/feQ6/6Pu
        dP9B1AD/6PP0//8Aqv/+hdv//k/L//5Qy//+UMv//k/L//6F2v//AKT//////7e7uP8AAAAWAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFrm3uv//////P84A/6fref9v3yX/ceAo/3Hg
        KP9v3yX/p+x6/0LVAP/k7/L//wCq//+D2v//M8D//zbB//82wf//M8D//4PZ//8ApP//////trq3/wAA
        ABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWube6//////8/zwD/rOyA/13Z
        Cv9f2Q3/X9kN/13ZCv+s7IH/QdUA/+Dr7v//AKv//4fa//8Ttf//Frb//xa2//8Ttf//htr//wCk////
        //+2urf/AAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABa4t7r//////z3P
        AP+07Iz/teyN/7bsj/+27I//teyN/7Tsjf8/1QD/3Obn//8Aqv//jd3//47c//+P3f//j93//47c//+N
        3P//AKP//////7a6t/8AAAAWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFbi3
        uf//////dMw2/z3OAP8/zwD/P88A/z/PAP8/zwD/Pc8A/3bROf/U2tr/7jq1//8ApP//AKT//wCk//8A
        pP//AKT//wCj/+s3sf//////t7m3/wAAABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAANuLi5////////////////////////////////////////////////////////////////////
        //////////////////////////////////+4ubj/AAAADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAS3t7e0uLi5/7i3uf+4t7r/ube6/7m3uv+5t7r/ube6/7i3uv+4t7n/t7e4/7e5
        t/+2urf/trq3/7a6t/+2urf/trq3/7a6t/+3ubf/uLm4/7e3t7QAAAAEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/4AAAP+AAAD/gAAA/4AAAP+AAAD/gAAA/4AAAP+AAAD/gAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH/AAAB/wAA
        Af8AAAH/AAAB/wAAAf8AAAH/AAAB/wAAAf8=
</value>
  </data>
</root>